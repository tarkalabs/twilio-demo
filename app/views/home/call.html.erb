<div>
  <input type="text" id="verifymobilenumber" placeholder="Add a phone number to be verified"/>
  <button onclick="verifyMobileNumber();">AddNumber</button>
  <div id='verifyblock' style='display:none'>
    <span id='verifydesc'> You'll now get a phone call to the number you jus' added. Key-in the below verification code to confirm this mobile number.</span>
    <h3 id='verifycode'></h3>
  </div>
</div>

<div id="twilioToken" data-token="<%= @twilio_token %>"></div>

<button id="caller" class="call" onclick="call();" data-caller="+919500031320">Call</button>
<button id="hangup" class="hangup" onclick="hangup();">Hangup</button>

<input type="text" id="phoneNumber" placeholder="Enter a phone number to call"/>

<div id="log">Loading...</div>

<script type="text/javascript" src="//static.twilio.com/libs/twiliojs/1.2/twilio.min.js"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>


<script type="text/javascript">
  function verifyMobileNumber() {
    pnumber = $('#verifymobilenumber').val();
    var req = $.ajax({
      beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
      url: '/verifyphonenumber',
      type: 'POST',
      data: {'PhoneNumber': pnumber},
      dataType: 'json',
    });
    var success = function(resp) {
      console.log(resp);
      $('#verifyblock').show();
      $('#verifycode').text(resp['verification_code']);
    };
    var err = function( req, status, err ) {
      var error = JSON.parse(req.responseText)['error'] || err; //$.parseJSON can be used alternatively??
      alert(error);
    };
    req.then( success, err );
  }

  /* Create the Client with a Capability Token */
  // Twilio.Device.setup("<%= @twilio_token %>", {debug: true});
  ttoken = '<%= @twilio_token %>';
  app_error = '<%= @error %>';
  (function(ttoken, err){
    console.log(ttoken);
    if(ttoken == '') {
      $("#log").text(err);
    } else {
      Twilio.Device.setup(ttoken, {debug: true});
    }
  })(ttoken, app_error);

  /* Let us know when the client is ready. */
  Twilio.Device.ready(function (device) {
      $("#log").text("Ready");
  });

  /* Report any errors on the screen */
  Twilio.Device.error(function (error) {
      $("#log").text("Error: " + error.code + '::' + error.message);
  });

  Twilio.Device.connect(function (conn) {
      $("#log").text("Successfully established call");
  });

  /* Log a message when a call disconnects. */
    Twilio.Device.disconnect(function (conn) {
        $("#log").text("Call ended");
    });

  /* Connect to Twilio when we call this function. */
  function call() {
    diableCalling();
    $("#log").text("Checking authorization..");
    var req = $.ajax({
      url: '/call',
      dataType: 'json',
    });
    var success = function( resp ) {
      // get the phone number to connect the call to
      var params = {"ToPhoneNumber": $("#phoneNumber").val(),
                "FromPhoneNumber": $('#caller').attr('data-caller')};
      Twilio.Device.connect(params);
    };
    var err = function( req, status, err ) {
      var error = JSON.parse(req.responseText)['error'] || err; //$.parseJSON can be used alternatively??
      $("#log").text(error);
      enableCalling();
    };
    req.then( success, err );
  }

  /* A function to end a connection to Twilio. */
  function hangup() {
      Twilio.Device.disconnectAll();
      enableCalling();
  }

  function enableCalling() {
    $('caller').removeAttr('disabled');
    $('phoneNumber').removeAttr('disabled');
  }

  function diableCalling() {
    $('caller').attr('disabled','disabled');
    $('phoneNumber').attr('disabled','disabled');
  }
</script>
